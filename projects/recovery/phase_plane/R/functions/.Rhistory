theta
plot(x,y)
plot(x,y, pch=19, col=rainbow(length(theta)), cex=.5)
install.packages("R.utils")
plot(test.dat, col="circ.colors", pch=19)
plot(test.dat, col=circ.colors, pch=19)
plot(test.dat, bg=circ.colors, pch=21)
plot.circular
length(test.circ)
?plot.circular
 x<-test.circ
nseries
head(xx)
xcircularp
modulo
col
ls()
col
seq(1)
test.mat
test.circ
?circular
test.circ
?plot.circular
?points.circular
PointsCircularRad <- function(x, bins, stack, col, pch, iseries, nseries, sep, next.points, shrink, cex, ...) {
   if (!stack) {
      z <- cos(x)
      y <- sin(x)
      r <- 1+((iseries-1)*sep+next.points)*shrink
            points.default(z*r, y*r, cex=cex, pch=pch[iseries], col = col, ...)
   } else {
      arc <- (2 * pi)/bins
      pos.bins <- ((1:nseries)-1/2)*arc/nseries-arc/2
      bins.count <- c(1:bins)
      for (i in 1:bins) {
         bins.count[i] <- sum(x <= i * arc & x > (i - 1) * arc)
      }
      mids <- seq(arc/2, 2 * pi - pi/bins, length = bins) + pos.bins[iseries]
      index <- cex*sep
      for (i in 1:bins) {
         if (bins.count[i] != 0) {
            for (j in 0:(bins.count[i] - 1)) {
               r <- 1 + j * index
               z <- r * cos(mids[i])
               y <- r * sin(mids[i])
               points.default(z, y, cex=cex, pch=pch[iseries], col=col, ...)
            }
         }
      }
   }
}

require(circular)
plot.circular
require(circular)
plot.circular
circ.colors
test.circ
library("circular")
plot.circular2(test.circ, stack=TRUE, bins=100)
arnings()
warnings()
objects()
rm("plot.circular2")
objects()
circ.colors
sample(circ.colors,1)
points.circular
plot.circular(circular(1), type="n")
points.circular2(test.circ, stack=TRUE, col=circ.colors)
environment(plot.circular2)
plot.circular2(test.circ, stack=TRUE, bins=100, col=sample(circ.colors))
q()
?library
?detach
points.default
?points.default
matrix(NA, ncol=10, nrow=bins)
bins<-10
matrix(NA, ncol=10, nrow=bins)
bins.color
ls()
bins
bins.col
x <= i * arc & x > (i - 1) * arc
x[x <= i * arc & x > (i - 1) * arc]
bins.col
x11()
plot(seq(1,3), col=c("#00FF29FF" "#FF00F5FF" "#3300FFFF"), pch=19, cex=2)
plot(seq(1,3), col=c("#00FF29FF", "#FF00F5FF", "#3300FFFF"), pch=19, cex=2)
warnings()
?points
?plot.circular
?ls
sqrt(-1)
complex
?complex
0i ^ (-3:3)
     zz <- (rep(1:4,len=9) + 1i*(9:1))/10
     zz.shift <- complex(modulus = Mod(zz), argument= Arg(zz) + pi)
     plot(zz, xlim=c(-1,1), ylim=c(-1,1), col="red", asp = 1,
          main = expression(paste("Rotation by "," ", pi == 180^o)))
     z <- complex(real = stats::rnorm(100), imaginary = stats::rnorm(100))
     z <- complex(real =x , imaginery=y*sqrt(-1))
     z <- complex(real =x , imaginery=yi)
     z <- complex(real =x , imaginery=y^1i)
     z2 <- 1:2 + 1i*(8:9)

?outer
?persp
?trans3d
?image
?levelplot
require(lattice)
?levelplot
detach()
persp(z)
?persp
install.packages(library(rgl))
install.packages("rgl")
help(package="rgl")
?surface3d
zlen
colorlut
col
rgl.close()
?qmesh3d
help(package="rgl")
rgl.texts
?rgl.texts
plot.text
text3d
plot.text[1,]
plot.text
q()
