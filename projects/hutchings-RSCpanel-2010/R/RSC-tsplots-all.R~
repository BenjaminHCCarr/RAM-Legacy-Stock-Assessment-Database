require(RODBC)
require(xtable)

## stocks of interest
##  -F \"\t\"
my.assessments <- strsplit(system("psql srdb -f ../SQL/Canada-stocks.sql -A -t", intern=TRUE, ignore.stdout=FALSE, ignore.stderr=TRUE, wait=FALSE),"[|]")

# turn into a data frame
tt.dat <- as.data.frame(matrix(unlist(my.assessments),ncol=length(my.assessments[[1]]),byrow=TRUE))
names(tt.dat) <- c("assessid","rec","stockid","stock","sciname","years","assessor","mgmt","LME")
table.dat<-data.frame(stock=tt.dat$stock,species=tt.dat$sciname,mgmt=tt.dat$mgmt,years=tt.dat$years,LME=tt.dat$LME)

## write to a LaTeX table
my.caption <- c("Stocks present in the RAM Legacy database that inhabit Canadian waters and are of national relevance.")
  my.table <- xtable(table.dat, caption=my.caption, label=c("tab:crosshair"), digits=2, align="p{6.5cm}p{4cm}p{3.5cm}ccp{5.5cm}")
  print(my.table, type="latex", file="../tex//Table.tex", include.rownames=FALSE, floating=FALSE, tabular.environment="longtable", caption.placement="bottom", sanitize.text.function=I)


ll <- dim(tt.dat)[1]

chan<-odbcConnect(dsn='srdbcalo')

pdf("RSC-report-plots.pdf",width=11/1.6,height=11,title="Timeseries plots for RSC expert panel report")

par(mfrow=c(3,2))
## loop over assessments and plot SSB and catch/landings vs time for each

for (i in 1:ll){
par(mar=c(4,3,2,4),new=FALSE)
my.aid <- tt.dat$assessid[i]
my.stock <- tt.dat$stock[i]
print(paste(i, my.stock,sep="  "))
qu <- paste("select * from srdb.timeseries_values_view where assessid='",my.aid,"'",sep="")
my.ts <- sqlQuery(chan,qu,stringsAsFactors=FALSE)

qu <- paste("select * from srdb.timeseries_units_view where assessid='",my.aid,"'",sep="")
my.tsu <- sqlQuery(chan,qu,stringsAsFactors=FALSE)

## what's available?
sum.dat.rows<-apply(my.ts[,4:length(my.ts[1,])],2,FUN=function(x){sum(as.numeric(x), na.rm=TRUE)})
sum.dat.rows[sum.dat.rows>0]
avail.series<-names(sum.dat.rows[sum.dat.rows>0])

## CASE 1
## SSB, TB and catch are available
if("ssb"%in%avail.series & "catch_landings"%in%avail.series & "total"%in%avail.series)
  {
    my.ssb.ylab <- paste("biomass (",my.tsu$ssb_unit,")",sep="")
    my.ssb.ylab.l <- paste("SSB (",my.tsu$ssb_unit,")",sep="")
    my.tb.ylab.l <- paste("TB (",my.tsu$total_unit,")",sep="")
    
  my.ylim<-c(range(na.omit(c(my.ts$ssb,my.ts$total)))[1],range(na.omit(c(my.ts$ssb,my.ts$total)))[2]*1.15)
plot(ssb~tsyear,data=my.ts, xlab="Year",ylab="",axes=FALSE,type='b',lwd=2,pch=19,lty=1,ylim=my.ylim)
title(my.stock,cex=0.75)
axis(side=1)
axis(side=2)
mtext(side=2,my.ssb.ylab,line=2)
lines(total~tsyear,data=my.ts, xlab="",ylab="",type='b',lwd=4,pch=19,lty=1,ylim=my.ylim)

par(new=TRUE)
my.c.ylab <- paste("Catch (",my.tsu$catch_landings_unit,")",sep="")
  my.ylim<-c(range(na.omit(my.ts$catch_landings))[1],range(na.omit(my.ts$catch_landings))[2]*1.15)
plot(catch_landings~tsyear,data=my.ts,xlab="",ylab="",axes=FALSE, type='b', pch=1, lty=2, lwd=2, col=grey(0.5),ylim=my.ylim)
axis(side=4)
mtext(side=4,my.c.ylab,line=2)
legend('topright',c(my.tb.ylab.l,my.ssb.ylab.l,my.c.ylab),pch=c(19,19,1),lty=c(1,1,2),col=c('black','black',grey(0.5)),lwd=c(4,2,2))
}

## CASE 2
## SSB and TB are available, catch is not available
if("ssb"%in%avail.series & !"catch_landings"%in%avail.series & !"total"%in%avail.series)
  {
    my.ssb.ylab <- paste("biomass (",my.tsu$ssb_unit,")",sep="")
    my.ssb.ylab.l <- paste("SSB (",my.tsu$ssb_unit,")",sep="")
    my.tb.ylab.l <- paste("TB (",my.tsu$total_unit,")",sep="")
  my.ylim<-c(range(na.omit(c(my.ts$ssb,my.ts$total)))[1],range(na.omit(c(my.ts$ssb,my.ts$total)))[2]*1.15)
plot(ssb~tsyear,data=my.ts, xlab="Year",ylab="",axes=FALSE,type='b',lwd=2,pch=19,lty=1,ylim=my.ylim)
lines(total~tsyear,data=my.ts, xlab="",ylab="",type='b',lwd=4,pch=19,lty=1,ylim=my.ylim)
title(my.stock,cex=0.75)
axis(side=1)
axis(side=2)
mtext(side=2,my.ssb.ylab,line=2)
legend('topright',c(my.tb.ylab.l,my.ssb.ylab.l),pch=c(19,19),lty=c(1,1),col=c('black','black'),lwd=c(4,2))
}

## CASE 3
## SSB and catch are available, TB is not available
if("ssb"%in%avail.series & "catch_landings"%in%avail.series & !"total"%in%avail.series)
  {
  my.ssb.ylab <- paste("biomass (",my.tsu$ssb_unit,")",sep="")
  my.ssb.ylab.l <- paste("SSB (",my.tsu$ssb_unit,")",sep="")
  my.ylim<-c(range(na.omit(my.ts$ssb))[1],range(na.omit(my.ts$ssb))[2]*1.15)
plot(ssb~tsyear,data=my.ts, xlab="Year",ylab="",axes=FALSE,type='b',lwd=2,pch=19,lty=1,ylim=my.ylim)
title(my.stock,cex=0.75)
axis(side=1)
axis(side=2)
mtext(side=2,my.ssb.ylab,line=2)

par(new=TRUE)
my.c.ylab <- paste("Catch (",my.tsu$catch_landings_unit,")",sep="")
  my.ylim<-c(range(na.omit(my.ts$catch_landings))[1],range(na.omit(my.ts$catch_landings))[2]*1.15)
plot(catch_landings~tsyear,data=my.ts,xlab="",ylab="",axes=FALSE, type='b', pch=1, lty=2, lwd=2, col=grey(0.5),ylim=my.ylim)
axis(side=4)
mtext(side=4,my.c.ylab,line=2)
legend('topright',c(my.ssb.ylab.l,my.c.ylab),pch=c(19,1),lty=c(1,2),col=c('black',grey(0.5)),lwd=c(2,2))
}
## CASE 4
## TB and catch are available, SSB is not available
if(!"ssb"%in%avail.series & "catch_landings"%in%avail.series & "total"%in%avail.series)
  {
    my.tb.ylab <- paste("biomass (",my.tsu$total_unit,")",sep="")
    my.tb.ylab.l <- paste("TB (",my.tsu$total_unit,")",sep="")
    
  my.ylim<-c(range(na.omit(my.ts$total))[1],range(na.omit(my.ts$total))[2]*1.15)
plot(total~tsyear,data=my.ts, xlab="Year",ylab="",axes=FALSE,type='b',lwd=4,pch=19,lty=1,ylim=my.ylim)
title(my.stock,cex=0.75)
axis(side=1)
axis(side=2)
mtext(side=2,my.ssb.ylab,line=2)

par(new=TRUE)
my.c.ylab <- paste("Catch (",my.tsu$catch_landings_unit,")",sep="")
  my.ylim<-c(range(na.omit(my.ts$catch_landings))[1],range(na.omit(my.ts$catch_landings))[2]*1.15)
plot(catch_landings~tsyear,data=my.ts,xlab="",ylab="",axes=FALSE, type='b', pch=1, lty=2, lwd=2, col=grey(0.5),ylim=my.ylim)
axis(side=4)
mtext(side=4,my.c.ylab,line=2)
legend('topright',c(my.tb.ylab.l,my.c.ylab),pch=c(19,1),lty=c(1,2),col=c('black',grey(0.5)),lwd=c(4,2))
}

## CASE 5
## only SSB is available
if("ssb"%in%avail.series & !"catch_landings"%in%avail.series & !"total"%in%avail.series)
  {
  my.ssb.ylab <- paste("biomass (",my.tsu$ssb_unit,")",sep="")
  my.ssb.ylab.l <- paste("SSB (",my.tsu$ssb_unit,")",sep="")
  my.ylim<-c(range(na.omit(my.ts$ssb))[1],range(na.omit(my.ts$ssb))[2]*1.15)
plot(ssb~tsyear,data=my.ts, xlab="Year",ylab="",axes=FALSE,type='b',lwd=2,pch=19,lty=1,ylim=my.ylim)
title(my.stock,cex=0.75)
axis(side=1)
axis(side=2)
mtext(side=2,my.ssb.ylab,line=2)
legend('topright',c(my.ssb.l.ylab),pch=c(19),lty=c(1),col=c('black'),lwd=c(2))
}

## CASE 6
## only TB is available
if(!"ssb"%in%avail.series & !"catch_landings"%in%avail.series & "total"%in%avail.series)
  {
    my.tb.ylab <- paste("biomass (",my.tsu$total_unit,")",sep="")
    my.tb.ylab.l <- paste("TB (",my.tsu$total_unit,")",sep="")
  my.ylim<-c(range(na.omit(my.ts$total))[1],range(na.omit(my.ts$total))[2]*1.15)
plot(total~tsyear,data=my.ts, xlab="Year",ylab="",axes=FALSE,type='b',lwd=4,pch=19,lty=1,ylim=my.ylim)
title(my.stock,cex=0.75)
axis(side=1)
axis(side=2)
mtext(side=2,my.ssb.ylab,line=2)
legend('topright',c(my.tb.ylab.l),pch=c(19),lty=c(1),col=c('black'),lwd=c(4))
}

## CASE 7
## only catch is available
if(!"ssb"%in%avail.series & "catch_landings"%in%avail.series & !"total"%in%avail.series)
  {  nn <- length(my.ts$tsyear)
plot(rep(-1,nn)~tsyear,data=my.ts, xlab="Year",ylab="",axes=FALSE,type='b',lwd=2,pch=19,lty=1,ylim=c(0,0.1))
title(my.stock,cex=0.75)
axis(side=1)
#axis(side=2)
#mtext(side=2,my.ssb.ylab,line=2)
par(new=TRUE)
my.c.ylab <- paste("Catch (",my.tsu$catch_landings_unit,")",sep="")
  my.ylim<-c(range(na.omit(my.ts$catch_landings))[1],range(na.omit(my.ts$catch_landings))[2]*1.15)
plot(catch_landings~tsyear,data=my.ts,xlab="",ylab="",axes=FALSE, type='b', pch=1, lty=2, lwd=2, col=grey(0.5),ylim=my.ylim)
axis(side=4)
mtext(side=4,my.c.ylab,line=2)
legend('topright',c(my.c.ylab),pch=c(1),lty=c(2),col=c(grey(0.5)),lwd=c(2))
}

## CASE 8
## nothing is available
if(!"ssb"%in%avail.series & !"catch_landings"%in%avail.series & !"total"%in%avail.series)
  {
  plot(1, type="n", axes=FALSE,xlab="", ylab="")
title(my.stock,cex=0.75)
legend("center", legend="No SSB, TB or catch \n available", bty="n", cex=1.1)
}


} ## end loop over assessments

dev.off()
odbcClose(chan)
