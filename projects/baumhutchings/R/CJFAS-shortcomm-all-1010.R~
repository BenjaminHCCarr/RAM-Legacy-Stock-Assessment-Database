## fits and plots by stock
## DR, CM
## date:
## Time-stamp: <Last modified: 8 FEBRUARY   (srdbadmin)>


##------
## DATA
##------
source("CJFAS-shortcomm-data.R")

## define the data frame
par.estimates <- data.frame(geo = rep(0,n), taxo = rep(0,n), stockid = rep(0,n),assessid = rep(0,n), m.slope.before = rep(0,n), m.slope.after = rep(0,n), mcont.slope.before = rep(0,n), mcont.slope.after = rep(0,n), m.diff=rep(0,n), mcont.diff=rep(0,n), model.diff=rep(0,n), mss.slope.before=rep(0,n), mss.slope.after=rep(0,n), mss.slope.diff=rep(0,n))


## plots and populate the dataframe -simultaneously

pdf("ts-CJFAS.pdf")

for(i in 1:n) {
  print(i)
temp <- subset(dat, assessid == a[i])
c<-which(temp$tsyear==cutoff)
#temp$post <- floor(temp$tsyear/(cutoff+1))
temp$post <- ifelse(temp$tsyear<cutoff, 0, 1)
  
temp$yr <- temp$tsyear - min(temp$tsyear) + 1

##-------
## FITS
##-------
m <- lm(log(ssb) ~ yr + post + post:yr, data=temp)
mcont <- lm(log(ssb) ~ yr + post:I(yr-c), data=temp)
s <- unique(temp$stockid)

par.estimates$stockid[i] <- as.character(s)
par.estimates$assessid[i] <- as.character(a[i])
par.estimates$m.slope.before[i] <- m$coef[2]
par.estimates$m.slope.after[i] <- m$coef[2] + m$coef[4]
par.estimates$mcont.slope.before[i] <- mcont$coef[2]
par.estimates$mcont.slope.after[i] <- mcont$coef[2] + mcont$coef[3]
par.estimates$m.diff[i] <- m$coef[4]
par.estimates$mcont.diff[i] <- mcont$coef[3]
par.estimates$model.diff[i] <- par.estimates$m.diff[i]-par.estimates$mcont.diff[i]
par.estimates$geo[i] <- as.character(unique(temp$geo))
par.estimates$taxo[i] <- as.character(unique(temp$taxocategory))

## process error model
##  my.dat.path<-"/home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/processerroronly/processerroronly.dat"
## kalman filter model
  my.dat.path<-"/home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/cbdkalman/cbdkalman.dat"
  
cat("# Number of obs \n", dim(temp)[1], "\n",file = my.dat.path, append=FALSE)
cat("# section 1 length \n", which(temp$tsyear==cutoff), "\n",file = my.dat.path, append=TRUE)
cat("# section 2 length \n", (dim(temp)[1]-which(temp$tsyear==cutoff)), "\n",file = my.dat.path, append=TRUE)
cat("# cutoff \n", cutoff, "\n",file = my.dat.path, append=TRUE)
cat("# years \n", temp$tsyear, "\n",file = my.dat.path, append=TRUE)
cat("# Observations \n", log(temp$ssb), "\n",file = my.dat.path, append=TRUE)

##system("cd /home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/processerroronly; rm processerroronly.std; ./processerroronly ")
  system("cd /home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/cbdkalman; rm cbdkalman.std; ./cbdkalman ")
##if(file.exists("/home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/processerroronly/processerroronly.std")){
if(file.exists("/home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/cbdkalman/cbdkalman.std")){  
  ##admb.fit<-get.admb.results("/home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/processerroronly/","processerroronly")
  admb.fit<-get.admb.results("/home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/cbdkalman/","cbdkalman")
  par.estimates$mss.slope.before[i]<-admb.fit$value[admb.fit$name=="slope_pre"]
  par.estimates$mss.slope.after[i]<-admb.fit$value[admb.fit$name=="slope_post"]
  par.estimates$mss.slope.diff[i]<-par.estimates$mss.slope.after[i]-par.estimates$mss.slope.before[i]
  state.res<-nile.fit<-readLines("/home/srdbadmin/SQLpg/srdb/trunk/projects/baumhutchings/admb/cbdkalman/cbdkalman.rep")
  ##state.hat<-admb.fit$value[admb.fit$name=="state"]
  state.hat<-as.numeric(strsplit(state.res[6], split=" ")[[1]])[-c(1,dim(temp)[1]+2)]
}else{
  par.estimates$mss.slope.before[i]<-NA
  par.estimates$mss.slope.after[i]<-NA
  par.estimates$mss.slope.diff[i]<-NA
  state.hat<-rep(NA, dim(temp)[1])
}

values <- subset(par.estimates, assessid == a[i])
pre.values <- c(round(values$m.slope.before,3), round(values$mcont.slope.before,3), round(values$mss.slope.before,3))
post.values <- c(round(values$m.slope.after,3), round(values$mcont.slope.after,3), round(values$mss.slope.after,3))

  
par(mfrow=c(2,1),mar=c(1,5,1,2), oma=c(2,2,4,3),lab=c(5,3,7), cex=1)

lower<- range(log(temp$ssb))[1]
upper<- range(log(temp$ssb))[2]*1.1
with(temp, plot(tsyear,log(ssb),ylim=c(lower,upper), pch=8,lty=2,type='b',xaxt='n', ylab='log(MT)')) 
mtext(a[i], side=3, outer=TRUE, cex=1.4)
axis(side=1,labels=FALSE, tick=TRUE)
lines(temp$tsyear[temp$post==0],predict(m,temp[temp$post==0,]),lty=1,col='blue',lwd=2)
lines(temp$tsyear[temp$post==1],predict(m,temp[temp$post==1,]),lty=1,col='blue',lwd=2)
lines(temp$tsyear, predict(mcont), lty=2, col="red", lwd=3)
lines(temp$tsyear,state.hat, col="seagreen", lwd=3, lty=1)
abline(v=cutoff, lty=2)
legend('topleft', legend=pre.values, title='pre-1992 slope value', lty=c(1,2,1), col=c('blue','red','seagreen'), cex=0.5)
legend('topright', legend=post.values, title='post-1992 slope value', lty=c(1,2,1), col=c('blue','red','seagreen'), cex=0.5)

plot(temp$tsyear, m$residuals, ylim=range(c(m$residuals, mcont$residuals)),col='blue', xlab='Year', ylab='Residual', pch=20)
points(temp$tsyear, mcont$residuals, col="red", pch=20)
points(temp$tsyear, log(temp$ssb)-state.hat, col="seagreen", pch=20)
abline(h=0,v=cutoff, lty=2)

}

par.estimates$m.pre.positive <- ifelse(par.estimates$m.slope.before>=0,1,0)
par.estimates$mcont.pre.positive <- ifelse(par.estimates$mcont.slope.before>=0,1,0)
par.estimates$mss.pre.positive <- ifelse(par.estimates$mss.slope.before>=0,1,0)
par.estimates$m.post.positive <- ifelse(par.estimates$m.slope.after>=0,1,0)
par.estimates$mcont.post.positive <- ifelse(par.estimates$mcont.slope.after>=0,1,0)
par.estimates$mss.post.positive <- ifelse(par.estimates$mss.slope.after>=0,1,0)
dev.off()

q("yes")
