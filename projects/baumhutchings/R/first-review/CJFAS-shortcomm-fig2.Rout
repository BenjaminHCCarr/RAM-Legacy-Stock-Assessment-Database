
R version 2.9.1 (2009-06-26)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## CBD analysis, main figure 2
> ## CM, DR
> ## date: Thu Jan 14 15:34:45 AST 2010
> ## Time-stamp: <2010-06-02 23:09:08 (srdbadmin)>
> ## Notes: Dan, please place in the /R/first-review folder
> 
> ## REQUIRED PACKAGES
> require(nlme); require(gregmisc)
Loading required package: nlme
Loading required package: gregmisc
Loading required package: gdata
gdata: read.xls support for 'XLS' (Excel 97-2004) files ENABLED.

gdata: read.xls support for 'XLSX' (Excel 2007+) files ENABLED.

Attaching package: 'gdata'


	The following object(s) are masked from package:utils :

	 object.size 

Loading required package: gmodels
Loading required package: gplots
Loading required package: gtools
Loading required package: caTools
Loading required package: bitops
Loading required package: grid

Attaching package: 'gplots'


	The following object(s) are masked from package:stats :

	 lowess 

Warning message:

	The `gregmisc' *package* has converted into a *bundle*
	containing four sub-packages: gdata, gtools, gmodels, and gplots.
	Please load these packages directly. 
> 
> ## LOAD FUNCTIONS 
> source("./CJFAS-shortcomm-fig2-functions.R")
> 
> ## DATA
> ## Currently reads in .csv files but these data should come directly from the database
> ## Dan to include RODBC calls
> # DR: data frame is already defined and properly populated
> #ts.dat<-read.csv("../../data/CJFAS-shortcomm-multispecies.csv", header=TRUE, stringsAsFactors=FALSE)
> #brp.ratio.dat<-read.csv("../../data/CJFAS-shortcomm-multispecies-BRPratios.csv", header=TRUE, stringsAsFactors=FALSE)
> 
> ts.dat <- dat.1010
> brp.ratio.dat <- ts.ratios.dat
> 
> ## DR: I changed the SQL in CJFAS-shortcomm-data-1010.R to reflect the changes in taxonomic classification 
> ## RE-CLASSIFY SOME TAXONOMIC CATEGORIES 
> #reclassify.dat<-read.xls(xls="../../data/stocks_for_taxocategory_class.xls", sheet=1, na.strings = "NA", stringsAsFactors=FALSE)
> 
> #recls.dat<-reclassify.dat[reclassify.dat$alternative_category!="",]
> #for(i in 1:dim(recls.dat)[1]){
> #  ts.dat$taxocategory[ts.dat$assessid==recls.dat$assessid[i]]<-recls.dat$alternative_category[i]
> #  brp.ratio.dat$taxocategory[brp.ratio.dat$assessid==recls.dat$assessid[i]]<-recls.dat$alternative_category[i]
> #}
> 
> ## make sure required years are present
> min.year<-1978
> max.year<-2002
> 
> ## ts.dat
> ts.assessid.vec<-unique(ts.dat$assessid)
> ## find out if 1978 and 2002 available?
> ts.years.present.mat<-sapply(ts.assessid.vec, function(x){c(min.year,max.year) %in% subset(ts.dat,assessid==x)$tsyear})
> ##
> table(apply(ts.years.present.mat,2,function(x){sum(x)}))

  1   2 
 33 174 
> ## need both to be true so the sum should be >1
> ts.years.present.index<-apply(ts.years.present.mat,2,function(x){sum(x)>1})
> ts.dat2<-subset(ts.dat, assessid %in% ts.assessid.vec[ts.years.present.index])
> 
> ## brp.ratio.dat
> brp.ratio.assessid.vec<-unique(brp.ratio.dat$assessid)
> ## find out if 1978 and 2002 available?
> brp.years.present.mat<-sapply(brp.ratio.assessid.vec, function(x){c(min.year,max.year) %in% subset(brp.ratio.dat,assessid==x)$tsyear})
> ##
> table(apply(brp.years.present.mat,2,function(x){sum(x)}))

  0   1   2 
 23  25 159 
> ## Are the both FALSE stocks, those without reference points?
> ## need both to be true so the sum should be >1
> brp.years.present.index<-apply(brp.years.present.mat,2,function(x){sum(x)>1})
> ## fewer number of stocks
> brp.ratio.dat2<-subset(brp.ratio.dat, assessid %in% brp.ratio.assessid.vec[brp.years.present.index])
> 
> ## INDICES
> ## Note that 'orig' refers to original analysis
> ## i.e. ssb trends scaled by subtracting the mean on the log scale
> ## 'brp' refers to trends of the reference point scaled series
> ## get the indices and associated confidence intervals
> ## use function get.scaled.index in ./CJFAS-shortcomm-fig2-functions.R
> 
> ## get the log of the brp ratio data to go from lognormal to normal
> brp.ratio.dat2$lnratio<-log(brp.ratio.dat2$ratio)
> 
> regions.vec<-c("NEAtl", "NWAtl", "NorthMidAtl", "Med", "SAfr", "NEPac", "Aust-NZ", "HighSeas")
> #regions.vec<-c("NEAtl", "NWAtl", "NorthMidAtl", "SAfr", "NEPac", "Aust-NZ", "HighSeas")
> 
> ## Pelagic by region
> ## brp
> brp.pelagic.mixed.list<-list()
> for(i in 1:length(regions.vec)){
+   print(i)
+   brp.pelagic.mixed.list[[regions.vec[i]]]<-get.mixed.index(region=regions.vec[i], category="Pelagic", min.year=1970, brp=TRUE)
+ }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
> ## orig
> orig.pelagic.mixed.list<-list()
> for(i in 1:length(regions.vec)){
+   print(i)
+   orig.pelagic.mixed.list[[regions.vec[i]]]<-get.mixed.index(region=regions.vec[i], category="Pelagic", min.year=1970, brp=FALSE)
+ }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
> 
> ## Demersal by region
> ## brp
> brp.demersal.mixed.list<-list()
> for(i in 1:length(regions.vec)){
+   print(i)
+   brp.demersal.mixed.list[[regions.vec[i]]]<-get.mixed.index(region=regions.vec[i], category="Demersal", min.year=1970, brp=TRUE)
+ }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
> 
> ## orig
> orig.demersal.mixed.list<-list()
> for(i in 1:length(regions.vec)){
+   print(i)
+   orig.demersal.mixed.list[[regions.vec[i]]]<-get.mixed.index(region=regions.vec[i], category="Demersal", min.year=1970, brp=FALSE)
+ }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
> 
> 
> ## All, Pelagic, Demersal over all regions
> all.category.vec<-c("All", "Pelagic", "Demersal")
> ## brp
> brp.all.mixed.list<-list()
> for(i in 1:length(all.category.vec)){
+   print(i)
+   brp.all.mixed.list[[all.category.vec[i]]]<-get.mixed.index(region="All", category=all.category.vec[i], min.year=1970, brp=TRUE)
+ }
[1] 1
[1] 2
[1] 3
> 
> ## orig
> orig.all.mixed.list<-list()
> for(i in 1:length(all.category.vec)){
+   print(i)
+   orig.all.mixed.list[[all.category.vec[i]]]<-get.mixed.index(region="All", category=all.category.vec[i], min.year=1970, brp=FALSE)
+ }
[1] 1
[1] 2
[1] 3
> 
> ##-----------
> ## Plotting
> ##-----------
> ## consider placing this code in the functions file and adding an argument for brp or not
> ## Dan to change filepath here for calo
> ## brp
> ## Dan to change this directory
> #png("/Users/mintoc/docs/analyses/sr/baumhutchings/tex/DRAFT2/figures/CJFAS-shortcomm-fig2_brp_v2.png", width=5.5,height=7.5, res=100,units="in")
> pdf("CJFAS-shortcomm-fig2-BRPratio-1010.pdf")
> 
> par(mfrow=c(4,2), mar=c(0,0,0,0), oma=c(4,4,2,2), las=1)
> ## All
> plot.poly.base.func(region="All", category="All", ylim=c(0,2.0), xlim=c(1970,2010), yaxt="n", xaxt="n", brp=TRUE)
> plot.poly.trend.func(region="All", category="All", brp=TRUE, ylim=c(0,2))
> abline(h=1, lty=2)
> ## All by category
> plot.poly.base.func(region="All", category="Both", ylim=c(0,2.0), xlim=c(1970,2010), yaxt="n", xaxt="n", brp=TRUE)
> plot.poly.trend.func(region="All", category="Both", brp=TRUE, ylim=c(0,2))
> abline(h=1, lty=2)
> ## Region by category
> plot.regions.vec<-c("NWAtl", "NEAtl", "NorthMidAtl", "NEPac", "Aust-NZ", "HighSeas")
> ylim.upr<-4
> for(i in 1:length(plot.regions.vec)){
+   ## setup plotting region
+   ## find out if i is odd (TRUE) or even (FALSE)
+   index<-i/2-i-as.integer(i/2-i)!=0
+     if(i>4){
+       if(index){
+         plot.poly.base.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(0,ylim.upr), xlim=c(1970,2010), yaxt="s", xaxt="s", brp=TRUE)
+       }else{
+         plot.poly.base.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(0,ylim.upr), xlim=c(1970,2010), yaxt="n", xaxt="n", brp=TRUE)
+         axis(side=1,at=seq(1980,2010, by=10), cex.axis=1.2)
+       }}else{
+         if(index){
+         plot.poly.base.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(0,ylim.upr), xlim=c(1970,2010), yaxt="s", xaxt="n", brp=TRUE)
+       }else{
+         plot.poly.base.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(0,ylim.upr), xlim=c(1970,2010), yaxt="n", xaxt="n", brp=TRUE)
+       }
+       }
+   ## plot the trends
+   plot.poly.trend.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(0,ylim.upr))
+   plot.poly.trend.func(region=plot.regions.vec[i], category="Demersal", ylim=c(0,ylim.upr))
+   abline(h=1, lty=2)
+ }
> par(las=0)
> mtext(side=1, text="Year", cex=1.1, line=2.5, outer=TRUE)
> mtext(side=2, text= "Relative biomass", cex=1.1, line=2.25, outer=TRUE)
> dev.off()
null device 
          1 
> 
> ## orig
> #png("/Users/mintoc/docs/analyses/sr/baumhutchings/tex/DRAFT2/figures/CJFAS-shortcomm-fig2_orig_v1.png", width=5,height=7, res=600,units="in")
> pdf("CJFAS-shortcomm-fig2-orig-1010.pdf")
> par(mfrow=c(4,2), mar=c(0,0,0,0), oma=c(4,4.5,2,2), las=1)
> ## All
> plot.poly.base.func(region="All", category="All", ylim=c(-1.0,1.0), xlim=c(1970,2010), yaxt="n", xaxt="n", brp=FALSE)
> plot.poly.trend.func(region="All", category="All", brp=FALSE, ylim=c(-1.0,1.0))
> ## All by category
> plot.poly.base.func(region="All", category="Both", ylim=c(-1.0,1.0), xlim=c(1970,2010), yaxt="n", xaxt="n", brp=FALSE)
> plot.poly.trend.func(region="All", category="Both", ylim=c(-1.0,1.0), brp=FALSE)
> ## Region by category
> plot.regions.vec<-c("NWAtl", "NEAtl", "NorthMidAtl", "NEPac", "HighSeas", "Aust-NZ")
> for(i in 1:length(plot.regions.vec)){
+   ## setup plotting region
+   ## find out if i is odd (TRUE) or even (FALSE)
+   index<-i/2-i-as.integer(i/2-i)!=0
+     if(i>4){
+       if(index){
+         plot.poly.base.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(-1.0,1.0), xlim=c(1970,2010), yaxt="s", xaxt="s", brp=FALSE)
+       }else{
+         plot.poly.base.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(-1.0,1.0), xlim=c(1970,2010), yaxt="n", xaxt="n", brp=FALSE)
+         axis(side=1,at=seq(1980,2010, by=10), cex.axis=1.2)
+       }}else{
+         if(index){
+         plot.poly.base.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(-1.0,1.0), xlim=c(1970,2010), yaxt="s", xaxt="n", brp=FALSE)
+       }else{
+         plot.poly.base.func(region=plot.regions.vec[i], category="Pelagic", ylim=c(-1.0,1.0), xlim=c(1970,2010), yaxt="n", xaxt="n", brp=FALSE)
+       }
+       }
+   ## plot the trends
+   plot.poly.trend.func(region=plot.regions.vec[i], category="Pelagic", brp=FALSE, ylim=c(-1.0,1.0))
+   plot.poly.trend.func(region=plot.regions.vec[i], category="Demersal", brp=FALSE, ylim=c(-1.0,1.0))  
+ }
> par(las=0)
> mtext(side=1, text="Year", cex=1.1, line=2.5, outer=TRUE)
> mtext(side=2, text= "Relative SSB", cex=1.1, line=2.75, outer=TRUE)
> dev.off()
null device 
          1 
> 
> ##-------------------
> ## PERCENTAGE CHANGE
> ##-------------------
> taxo.category.vec<-c("Pelagic", "Demersal")
> ## all regions, all categories
> ## brp
> brp.percent.change.df<-data.frame(t(extract.percentage.change(region="All", category="All", n.years=5, brp=TRUE)))
> ## all regions by category
> for(i in 1: length(taxo.category.vec)){
+   brp.percent.change.df<-rbind(brp.percent.change.df,
+   data.frame(t(extract.percentage.change(region="All", category=taxo.category.vec[i], n.years=5, brp=TRUE))))
+ }
> ## region by category
> for(i in 1:length(regions.vec)){
+   print(i)
+   for(j in 1:length(taxo.category.vec)){
+     brp.percent.change.df<-rbind(brp.percent.change.df,
+     data.frame(t(extract.percentage.change(region=regions.vec[i], category=taxo.category.vec[j], n.years=5, brp=TRUE))))
+   }}
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
> names(brp.percent.change.df)<-c("region", "category", "n","index.start", "index.end", "percent.decline")
> ## Dan to change this output directory
> ##write.csv(brp.percent.change.df, file="../../data/CJFAS-shortcomm-fig2-brp-percent-change.csv", row.names=FALSE)
> write.csv(brp.percent.change.df, file="./CJFAS-shortcomm-fig2-brp-percent-change.csv", row.names=FALSE)
> 
> 
> ## orig
> orig.percent.change.df<-data.frame(t(extract.percentage.change(region="All", category="All", n.years=5, brp=FALSE)))
> ## all regions by category
> for(i in 1: length(taxo.category.vec)){
+   orig.percent.change.df<-rbind(orig.percent.change.df,
+   data.frame(t(extract.percentage.change(region="All", category=taxo.category.vec[i], n.years=5, brp=FALSE))))
+ }
> ## region by category
> for(i in 1:length(regions.vec)){
+   print(i)
+   for(j in 1:length(taxo.category.vec)){
+     orig.percent.change.df<-rbind(orig.percent.change.df,
+     data.frame(t(extract.percentage.change(region=regions.vec[i], category=taxo.category.vec[j], n.years=5, brp=FALSE))))
+   }}
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
> names(orig.percent.change.df)<-c("region", "category", "n","index.start", "index.end", "percent.decline")
> ## Dan to change this output directory
> #write.csv(orig.percent.change.df, file="../../data/CJFAS-shortcomm-fig2-orig-percent-change.csv", row.names=FALSE)
> write.csv(orig.percent.change.df, file="./CJFAS-shortcomm-fig2-orig-percent-change.csv", row.names=FALSE)
> #q("yes")
> 
> ##--------
> 
> proc.time()
   user  system elapsed 
163.806  10.392 179.402 
