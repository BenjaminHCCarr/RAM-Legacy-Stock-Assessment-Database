
R version 2.13.0 (2011-04-13)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i486-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## orca plots for resubmission of Fish and Fisheries manuscript 2011
> ## fried-egg-plots.R
> ## produce fried egg plots for Fish and Fisheries manuscript
> ## Daniel Ricard, started 2010-03-25
> ## Last modified: Time-stamp: <2011-05-31 13:07:50 (srdbadmin)>
> ## Modification history:
> ## 2010-07-14: Olaf and I just realised that some mismatch between the Science paper and the ratios computed here come from the fact that I was using both ratios from either the SP or from the assessment, whereas in the Science paper assessment Bmsy were used when available, even if there was no Fmsy in the assessment -> I HAVE TO FIX THIS, BOTH HERE AND FOR MALIN PINSKY DATA REQUEST
> ## 2011-01-12: the pch used for plotting the salt and pepper was backwards, i.e. salt appeared as pepper and vice-versa, I fixed that, ICES should be all salt, same for DFO.
> ##
> setwd("/home/srdbadmin/srdb/projects/fishandfisheries/R/first-review/")
> 
> require(RODBC)
Loading required package: RODBC
> require(KernSmooth)
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
> #require(gregmisc)
> require(xtable)
Loading required package: xtable
> 
> chan<- odbcConnect(dsn="srdbcalo")
> 
> source("friedegg-fct.R")
> 
> ## now generate some PDF with plots
> pdf("friedegg-single.pdf", width=8, height=10)
> #png("friedegg-single.png", width=800, height=1000)
> 
> multipanel <- "FALSE"
>   if(multipanel){
+     par(mar=c(1,1,1,1), oma=c(3.5,3,0,0))
+ }else{par(mar=c(5.1, 5.1, 4.1, 2.1))}
> fried.egg.fct("all","all","all","TRUE","TRUE","","TRUE")
> dev.off()
null device 
          1 
> 
> ## taxonomic grouping
> pdf("friedegg-taxo.pdf", width=8, height=10)
>     par(mar=c(2,2,1,1), oma=c(2,2,0,0))
> par(mfrow=c(3,2))
> fried.egg.fct("taxo"," ordername = 'Gadiformes'","Gadiformes","FALSE","TRUE","Gadiformes","TRUE")
> fried.egg.fct("taxo"," ordername = 'Perciformes'","Perciformes","FALSE","FALSE","Perciformes","TRUE")
> fried.egg.fct("taxo"," ordername = 'Pleuronectiformes'","Pleuronectiformes","FALSE","TRUE","Pleuronectiformes","TRUE")
> fried.egg.fct("taxo"," ordername = 'Scorpaeniformes'","Scorpaeniformes","TRUE","TRUE","Scorpaeniformes","TRUE")
> fried.egg.fct("taxo"," ordername = 'Clupeiformes'","Clupeiformes","FALSE","FALSE","Clupeiformes","TRUE")
> fried.egg.fct("taxo"," ordername = 'Decapoda'","Decapoda","TRUE","TRUE","Decapoda","TRUE")
> dev.off()
null device 
          1 
> 
> ## now use some logic to assign each species to a taxonomic group, either Invertebrate, Pelagic, Demersal or Sharks/Rays
> ## and call the function for the stockid that correspond to each
> taxo.cat.qu <- paste("
+ select s.stockid, tt.scientificname, tt.commonname1, tt.taxocategory from srdb.stock s, (select tsn, scientificname, commonname1, (CASE WHEN classname = 'Chondrichthyes' then 'Sharks/Rays' ELSE (CASE WHEN phylum in  ('Arthropoda','Mollusca') THEN 'Invertebrates' ELSE (CASE WHEN ((family in ('Clupeidae','Scombridae','Engraulidae')) OR (genus IN ('Trachurus','Mallotus')) OR (scientificname IN ('Arripis trutta','Micromesistius australis','Xiphias gladius','Micromesistius poutassou','Pomatomus saltatrix','Kajikia audax'))) THEN 'Pelagics' ELSE 'Demersals' END) END) END) as taxocategory from srdb.taxonomy) tt where tt.tsn=s.tsn
+ ",sep="")
> taxo.cat <- sqlQuery(chan,taxo.cat.qu)
> 
> pdf("friedegg-bytaxocategory.pdf", width=10, height=10/2.5)
> par(mar=c(2,2,1,1), oma=c(2,2,0,0))
> par(mfrow=c(1,3))
> 
> ## demersals
> ss.dem <- subset(taxo.cat,taxocategory=="Demersals")$stockid
> my.ss <- paste("(", capture.output(cat(paste("'",as.character(ss.dem),"'",sep=""), sep=",")), ")", sep="")
> fried.egg.fct("stock",my.ss,"dem","FALSE","TRUE","Demersals","TRUE")
> 
> ## pelagics
> ss.pel <- subset(taxo.cat,taxocategory=="Pelagics")$stockid
> my.ss <- paste("(", capture.output(cat(paste("'",as.character(ss.pel),"'",sep=""), sep=",")), ")", sep="")   
> fried.egg.fct("stock",my.ss,"pel","FALSE","TRUE","Pelagics","TRUE")
> 
> ## inverts
> ss.inv <- subset(taxo.cat,taxocategory=="Invertebrates")$stockid
> my.ss <- paste("(", capture.output(cat(paste("'",as.character(ss.inv),"'",sep=""), sep=",")), ")", sep="")
> fried.egg.fct("stock",my.ss,"inverts","FALSE","TRUE","Invertebrates","TRUE")
> 
> dev.off()
null device 
          1 
> 
> 
> ## call with a subset of stockid, for example the top 30 fisheries
> ## 
> pdf("friedegg-top30fisheries.pdf", width=8, height=10)
> fried.egg.fct("stock"," ('PANCHPERUNC','WPOLLNSO','SEELNS','WPOLLEBS','CAPEICE','SARDPVIIIc-IXa','CHTRACCH','MENATGM','WPOLLGA','ARGHAKESARG','ARGHAKENARG','SPRAT22-32','HERRNS','HERR2224IIIa','HERR2532','CTRACSA','MACKNEICES','CHAKESA')","top30","FALSE","TRUE","Top 30 fisheries","TRUE")
> dev.off()
null device 
          1 
> 
> ## do the same just for the ICES stocks
> 
> 
> pdf("friedegg-bymgmt.pdf", width=8, height=10)
> #png("friedegg-by-mgmt.png", width=800, height=1000)
> multipanel <- "TRUE"
>   if(multipanel){
+     par(mar=c(2,2,1,1), oma=c(2,2,0,0))
+ }else{par(mar=c(5.1, 5.1, 4.1, 2.1))}
> 
> #par(mfrow=c(5,2))
> par(mfrow=c(5,2))
> 
> # all
> fried.egg.fct("mgmt",c("('AFMA', 'CCAMLR','CCSBT', 'CFP', 'DETMCM', 'DFO', 'GFCMED', 'IATTC', 'ICCAT', 'ICES', 'IMARPE', 'IOTC', 'IPHC', 'Iran', 'MFish', 'NAFO', 'NMFS', 'RFFA', 'SPC', 'SPRFMO', 'TRAC', 'UNKNOWN', 'US State', 'WCPFC', 'WPFMC')"),"ALLMGMT","FALSE","TRUE","All","TRUE")
> # NMFS
> fried.egg.fct("mgmt",c("('NMFS','US State')"),"NMFS","FALSE","FALSE","NMFS","TRUE")
> # ICES
> fried.egg.fct("mgmt",c("('ICES')"),"ICES","FALSE","TRUE","ICES","TRUE")
> # MFish
> fried.egg.fct("mgmt",c("('MFish')"),"MFish","FALSE","FALSE","MFish","TRUE")
> # DFO
> fried.egg.fct("mgmt",c("('DFO')"),"DFO","FALSE","TRUE","DFO","TRUE")
> # AFMA
> fried.egg.fct("mgmt",c("('AFMA')"),"AFMA","FALSE","FALSE","AFMA","TRUE")
> # DETMCM
> fried.egg.fct("mgmt",c("('DETMCM')"),"DETMCM","TRUE","TRUE","DETMCM","TRUE")
> # Atlantic
> fried.egg.fct("mgmt",c("('NAFO','ICCAT')"),"ATL","FALSE","TRUE","Atlantic","TRUE") # 'TRAC',
> 
> ## calls to get results in the fishfisheries.results table
> fried.egg.fct("mgmt",c("('NAFO')"),"NAFO","TRUE","TRUE","Atlantic","FALSE")
> fried.egg.fct("mgmt",c("('ICCAT')"),"ICCAT","TRUE","TRUE","Atlantic","FALSE")
> 
> mtext(expression(B[curr]/B[MSY]), side=1, line=1, outer=TRUE, cex=0.75)
> 
> dev.off()
null device 
          1 
> 
> pdf("friedegg-bymgmt-10plots.pdf", width=8, height=10)
> #png("friedegg-by-mgmt.png", width=800, height=1000)
> multipanel <- "TRUE"
>   if(multipanel){
+     par(mar=c(2,2,1,1), oma=c(2,2,0,0))
+ }else{par(mar=c(5.1, 5.1, 4.1, 2.1))}
> 
> #par(mfrow=c(5,2))
> par(mfrow=c(5,2))
> 
> # all
> fried.egg.fct("mgmt",c("('AFMA', 'CCAMLR','CCSBT', 'CFP', 'DETMCM', 'DFO', 'GFCMED', 'IATTC', 'ICCAT', 'ICES', 'IMARPE', 'IOTC', 'IPHC', 'Iran', 'MFish', 'NAFO', 'NMFS', 'RFFA', 'SPC', 'SPRFMO', 'TRAC', 'UNKNOWN', 'US State', 'WCPFC', 'WPFMC')"),"ALLMGMT","FALSE","TRUE","All","TRUE")
> # NMFS
> fried.egg.fct("mgmt",c("('NMFS','US State')"),"NMFS","FALSE","FALSE","NMFS","TRUE")
> # ICES
> fried.egg.fct("mgmt",c("('ICES')"),"ICES","FALSE","TRUE","ICES","TRUE")
> # DFO
> fried.egg.fct("mgmt",c("('DFO')"),"DFO","FALSE","FALSE","DFO","TRUE")
> # Pacific
> fried.egg.fct("mgmt",c("('IATTC','SPC','IPHC','RFFA','SPRFMO','WCPFC','WPFMC')"),"PAC","FALSE","TRUE","Pacific","TRUE")
> mtext(expression(U[curr]/U[MSY]), side=2, line=1, outer=TRUE, cex=0.75)
> # Atlantic
> fried.egg.fct("mgmt",c("('NAFO','ICCAT')"),"ATL","FALSE","FALSE","Atlantic","TRUE") # 'TRAC',
> # AFMA
> fried.egg.fct("mgmt",c("('AFMA')"),"AFMA","FALSE","TRUE","AFMA","TRUE")
> # MFish
> fried.egg.fct("mgmt",c("('MFish')"),"MFish","FALSE","FALSE","MFish","TRUE")
> # other
> fried.egg.fct("mgmt",c("('CCAMLR','CFP','IMARPE','DETMCM','IOTC','Iran')"),"other","TRUE","TRUE","other","TRUE")
> 
> mtext(expression(B[curr]/B[MSY]), side=1, line=1, outer=TRUE, cex=0.75)
> 
> dev.off()
null device 
          1 
> 
> pdf("friedegg-9plots.pdf", width=11, height=11/1.6)
> multipanel <- "TRUE"
>   if(multipanel){
+     par(mar=c(2,2,1,1), oma=c(2,2,0,0))
+ }else{par(mar=c(5.1, 5.1, 4.1, 2.1))}
> 
> par(mfrow=c(3,3))
> # DFO
> fried.egg.fct("mgmt",c("('DFO')"),"DFO","FALSE","FALSE","Canada","TRUE")
> # NMFS
> fried.egg.fct("mgmt",c("('NMFS','US State')"),"NMFS","FALSE","FALSE","U.S.","TRUE")
> # ICES
> fried.egg.fct("mgmt",c("('ICES')"),"ICES","FALSE","TRUE","Europe","TRUE")
> # Pacific
> fried.egg.fct("mgmt",c("('IATTC','SPC','IPHC','RFFA','SPRFMO','WCPFC','WPFMC')"),"PAC","FALSE","TRUE","Pacific","TRUE")
> mtext(expression(U[curr]/U[MSY]), side=2, line=1, outer=TRUE, cex=0.75)
> #all
> fried.egg.fct("mgmt",c("('AFMA', 'CCAMLR','CCSBT', 'CFP', 'DETMCM', 'DFO', 'GFCMED', 'IATTC', 'ICCAT', 'ICES', 'IMARPE', 'IOTC', 'IPHC', 'Iran', 'MFish', 'NAFO', 'NMFS', 'RFFA', 'SPC', 'SPRFMO', 'TRAC', 'UNKNOWN', 'US State', 'WCPFC', 'WPFMC')"),"ALLMGMT","FALSE","TRUE","All","TRUE")
> # Atlantic
> fried.egg.fct("mgmt",c("('NAFO','ICCAT')"),"ATL","FALSE","FALSE","Atlantic","TRUE") # 'TRAC',
> # other
> fried.egg.fct("mgmt",c("('CCAMLR','CFP','IMARPE','DETMCM','IOTC','Iran')"),"other","TRUE","TRUE","other","TRUE")
> # AFMA
> fried.egg.fct("mgmt",c("('AFMA')"),"AFMA","FALSE","TRUE","Australia","TRUE")
> # MFish
> fried.egg.fct("mgmt",c("('MFish')"),"MFish","FALSE","FALSE","New Zealand","TRUE")
> 
> 
> ## calls to get results in the fishfisheries.results table
> fried.egg.fct("mgmt",c("('NAFO')"),"NAFO","TRUE","TRUE","Atlantic","FALSE")
> fried.egg.fct("mgmt",c("('ICCAT')"),"ICCAT","TRUE","TRUE","Atlantic","FALSE")
> 
> mtext(expression(B[curr]/B[MSY]), side=1, line=1, outer=TRUE, cex=0.75)
> 
> dev.off()
null device 
          1 
> 
> ## DFO only
> pdf("friedegg-DFO.pdf", width=8, height=10)
> fried.egg.fct("mgmt",c("('DFO')"),"DFO","TRUE","TRUE","DFO","TRUE")
> mtext(expression(U[curr]/U[MSY]), side=2, line=1, outer=TRUE, cex=0.75)
> mtext(expression(B[curr]/B[MSY]), side=1, line=1, outer=TRUE, cex=0.75)
> dev.off()
null device 
          1 
> ###
> 
> qu <- paste("
+ select mgmt, category, count(*) from (select mm.mgmt, (CASE when am.category in ('Integrated Analysis','Statistical catch at age model', 'Statistical catch at length model') THEN 'Statistical catch-at-age/length models' ELSE (CASE WHEN am.category='VPA' THEN 'Virtual Population Analyses' ELSE (CASE WHEN am.category='' THEN 'Biomass dynamics models' ELSE am.category END) END) END) as category from srdb.assessment aa, srdb.assessmethod am, srdb.assessor ass, srdb.management mm where aa.assessorid=ass.assessorid and ass.mgmt=mm.mgmt and aa.assessmethod=am.methodshort and aa.recorder != 'MYERS' and aa.assess=1) as a group by mgmt, category order by mgmt
+ ", sep="")
> 
> methods.by.mgmt <- sqlQuery(chan,qu)
> 
> numerator <- subset(methods.by.mgmt, mgmt== 'AFMA' & category == 'Statistical catch-at-age/length models')$count
> denominator <- sum(subset(methods.by.mgmt, mgmt== 'AFMA')$count)
> nn<-round(numerator/denominator * 100, 0)
> delete.qu <- paste("DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTSCALAFMA'",sep="" )
> sqlQuery(chan,delete.qu)
[1] "[RODBC] ERROR: Could not SQLExecDirect 'DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTSCALAFMA''"
> insert.qu <- paste("INSERT INTO fishfisheries.results VALUES ('REF:SQL:PERCENTSCALAFMA',",nn,")",sep="" )
> sqlQuery(chan,insert.qu)
character(0)
> 
> numerator <- subset(methods.by.mgmt, mgmt== 'MFish' & category == 'Statistical catch-at-age/length models')$count
> denominator <- sum(subset(methods.by.mgmt, mgmt== 'MFish')$count)
> nn<-round(numerator/denominator * 100, 0)
> delete.qu <- paste("DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTSCALMFISH'",sep="" )
> sqlQuery(chan,delete.qu)
[1] "[RODBC] ERROR: Could not SQLExecDirect 'DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTSCALMFISH''"
> insert.qu <- paste("INSERT INTO fishfisheries.results VALUES ('REF:SQL:PERCENTSCALMFISH',",nn,")",sep="" )
> sqlQuery(chan,insert.qu)
character(0)
> 
> numerator <- subset(methods.by.mgmt, mgmt== 'NMFS' & category == 'Statistical catch-at-age/length models')$count
> denominator <- sum(subset(methods.by.mgmt, mgmt== 'NMFS')$count)
> nn<-round(numerator/denominator * 100, 0)
> delete.qu <- paste("DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTSCALNMFS'",sep="" )
> sqlQuery(chan,delete.qu)
[1] "[RODBC] ERROR: Could not SQLExecDirect 'DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTSCALNMFS''"
> insert.qu <- paste("INSERT INTO fishfisheries.results VALUES ('REF:SQL:PERCENTSCALNMFS',",nn,")",sep="" )
> sqlQuery(chan,insert.qu)
character(0)
> 
> numerator <- subset(methods.by.mgmt, mgmt== 'ICES' & category == 'Virtual Population Analyses')$count
> denominator <- sum(subset(methods.by.mgmt, mgmt== 'ICES')$count)
> nn<-round(numerator/denominator * 100, 0)
> delete.qu <- paste("DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTVPAICES'",sep="" )
> sqlQuery(chan,delete.qu)
[1] "[RODBC] ERROR: Could not SQLExecDirect 'DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTVPAICES''"
> insert.qu <- paste("INSERT INTO fishfisheries.results VALUES ('REF:SQL:PERCENTVPAICES',",nn,")",sep="" )
> sqlQuery(chan,insert.qu)
character(0)
> 
> numerator <- subset(methods.by.mgmt, mgmt== 'CFP' & category == 'Virtual Population Analyses')$count
> denominator <- sum(subset(methods.by.mgmt, mgmt== 'CFP')$count)
> nn<-round(numerator/denominator * 100, 0)
> delete.qu <- paste("DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTVPACFP'",sep="" )
> sqlQuery(chan,delete.qu)
[1] "[RODBC] ERROR: Could not SQLExecDirect 'DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTVPACFP''"
> insert.qu <- paste("INSERT INTO fishfisheries.results VALUES ('REF:SQL:PERCENTVPACFP',",nn,")",sep="" )
> sqlQuery(chan,insert.qu)
character(0)
> 
> numerator <- subset(methods.by.mgmt, mgmt== 'DFO' & category == 'Virtual Population Analyses')$count
> denominator <- sum(subset(methods.by.mgmt, mgmt== 'DFO')$count)
> nn<-round(numerator/denominator * 100, 0)
> delete.qu <- paste("DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTVPADFO'",sep="" )
> sqlQuery(chan,delete.qu)
[1] "[RODBC] ERROR: Could not SQLExecDirect 'DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:PERCENTVPADFO''"
> insert.qu <- paste("INSERT INTO fishfisheries.results VALUES ('REF:SQL:PERCENTVPADFO',",nn,")",sep="" )
> sqlQuery(chan,insert.qu)
character(0)
> 
> odbcClose(chan)
> save.image()
> 
> 
> 
> proc.time()
   user  system elapsed 
  9.260   0.132  25.140 
