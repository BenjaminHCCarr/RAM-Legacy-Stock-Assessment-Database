
R version 2.12.1 (2010-12-16)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i486-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Warning in library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'Revobase'
[Previously saved workspace restored]

> ## spoked wheel dendrogram for Fish and Fisheries manuscript
> ## Started: 2010-02-16 DR from earlier work in this directory
> ## Last modified Time-stamp: <2010-09-14 14:57:17 (srdbadmin)>
> ## Modification history:
> ## 2010-04-08: we decided on not using LMEs for weighting the dendrograms, modifying the code to reflect that (DR)
> ## 2010-05-27: system upgrade broke R and I had to revert to an earlier version for this code to work
> 
> setwd("/home/srdbadmin/srdb/projects/fishandfisheries/R")
> require(RODBC); require(ape); require(gsubfn); require(IDPmisc); require(doBy)
Loading required package: RODBC
Loading required package: ape
Loading required package: gsubfn
Loading required package: proto
Loading required package: IDPmisc
Loading required package: grid
Loading required package: lattice

Attaching package: 'IDPmisc'

The following object(s) are masked from 'package:ape':

    zoom

Loading required package: doBy
Loading required package: survival
Loading required package: splines
> 
>     f.rec <- function(subtaxo) {
+         u <- ncol(subtaxo)
+         levels <- unique(subtaxo[, u])
+         if (u == 1) {
+             if (length(levels) != nrow(subtaxo)) 
+                 warning("Error, leaves names are not unique.")
+             return(as.character(subtaxo[, 1]))
+           }
+         t <- character(length(levels))
+         for (l in 1:length(levels)) {
+             x <- f.rec(subtaxo[subtaxo[, u] == levels[l], ][1:(u - 1)])
+            if (length(x) == 1) 
+               t[l] <- x
+                ##t[l] <- paste(x,":", 1, sep="")
+             else{
+               n.elements<-length(unlist(strapply(x, "(?<![:0-9])[0-9]+", backref=1, perl=TRUE))) ## ammended CM, Dec 6th 2009
+               t[l] <- paste("(", paste(x, collapse = ","),")",":",n.elements, sep = "") ## ammended CM, Dec 6th 2009
+             }
+           }
+         return(t)
+       }
> 
> source("my_as_phylo_formula.R")
> source("by_order_as_phylo_formula.R")
> 
> chan <- odbcConnect(dsn="srdbcalo")
> 
> ### FishBase
> fishbase.dat <- read.table("fishbase-DendroRAM-FROMRAINER.csv", sep=",", header=TRUE)
> fishbase.dat$scientificname <- as.factor(paste(fishbase.dat$Genus, fishbase.dat$Species, sep=" "))
> fishbase.dat <- fishbase.dat[order(fishbase.dat$scientificname),]
> 
> # number of species in FishBase
> delete.qu <- paste("DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:NUMSPPFISHBASE'",sep="" )
> sqlQuery(chan,delete.qu)
character(0)
> insert.qu <- paste("INSERT INTO fishfisheries.results VALUES ('REF:SQL:NUMSPPFISHBASE',",dim(fishbase.dat)[1] ,")", sep="")
> sqlQuery(chan,insert.qu)
character(0)
> 
> # number of orders in FishBase
> delete.qu <- paste("DELETE FROM fishfisheries.results WHERE flag= 'REF:SQL:NUMORDERSFISHBASE'",sep="" )
> sqlQuery(chan,delete.qu)
character(0)
> insert.qu <- paste("INSERT INTO fishfisheries.results VALUES ('REF:SQL:NUMORDERSFISHBASE',",length(unique(fishbase.dat$Order)) ,")", sep="")
> sqlQuery(chan,insert.qu)
character(0)
> 
> 
> ## expand out the species row entries to be equal to the value of LME column
> ##expanded.fishbase.dat<-fishbase.dat[rep(1:nrow(fishbase.dat), times=fishbase.dat$LME), ]
> expanded.fishbase.dat<-fishbase.dat
> ## get the counts by order
> fishbase.dat.order<-summaryBy(Family~Class+Order, data=expanded.fishbase.dat, FUN=c(length))
> 
> taxo.phylo.fishbase<-as.phylo(~Class/Order, data=fishbase.dat.order)
> my.taxo.phylo.fishbase<-my.as.phylo.formula(~Class/Order, data=fishbase.dat.order)
Error in function (x)  : unused argument(s) ("")
Calls: my.as.phylo.formula ... paste -> sapply -> lapply -> FUN -> do.call -> <Anonymous>
Execution halted
Warning message:
closing unused RODBC handle 1 
